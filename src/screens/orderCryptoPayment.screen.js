import 'dotenv/config';

export const orderCryptoPaymentScreenHandler = async (ctx, initialState, editMessage) => {
  const { order, month, isGift } = initialState;

  const amountUSD = order?.input?.amountUSD ?? order?.input?.amount ?? '';
  const payCurrency = order?.input?.currency ?? order?.input?.payCurrency ?? '';
  const expires = order?.output?.expiredAt ? new Date(order.output.expiredAt).toLocaleString() : '';

  const possibleUrl = order?.output?.paymentUrl
    || order?.output?.url
    || order?.output?.checkoutUrl
    || order?.output?.redirectUrl
    || order?.output?.returnUrl
    || `https://app.0xprocessing.com/`;

  const message = `‚úÖ –ü–ª–∞—Ç—ë–∂ —Å–æ–∑–¥–∞–Ω\n\n` +
    (amountUSD ? `–°—É–º–º–∞: ${amountUSD} USD\n` : '') +
    (payCurrency ? `–í–∞–ª—é—Ç–∞: ${payCurrency}\n` : '') +
    (month ? `–ü–ª–∞–Ω: ${month} –º–µ—Å.\n` : '') +
    (isGift ? `–†–µ–∂–∏–º: –ü–æ–¥–∞—Ä–æ–∫\n` : '') +
    (expires ? `–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ${expires}\n\n` : '\n') +
    `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã.`;

  const reply_markup = {
    inline_keyboard: [
      [ { text: 'üîó –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã', url: possibleUrl } ],
      [ { text: 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data: JSON.stringify({ command: 'check_is_payment_completed' }) } ],
      [ { text: '‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data: JSON.stringify({ command: 'back' }) } ],
    ],
  };

  if (!ctx?.chat?.id) return;

  // Always send a new message to reliably get message_id
  return await ctx.telegram.sendMessage(ctx.chat.id, message, {
    parse_mode: 'HTML',
    disable_web_page_preview: true,
    reply_markup,
  });
};
